// automatically generated by the FlatBuffers compiler, do not modify

package slyther.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TickAck extends Table {
  public static TickAck getRootAsTickAck(ByteBuffer _bb) { return getRootAsTickAck(_bb, new TickAck()); }
  public static TickAck getRootAsTickAck(ByteBuffer _bb, TickAck obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public TickAck __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long tick() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0; }

  public static int createTickAck(FlatBufferBuilder builder,
      long tick) {
    builder.startObject(1);
    TickAck.addTick(builder, tick);
    return TickAck.endTickAck(builder);
  }

  public static void startTickAck(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addTick(FlatBufferBuilder builder, long tick) { builder.addInt(0, (int)tick, 0); }
  public static int endTickAck(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishTickAckBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

