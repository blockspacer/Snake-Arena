// automatically generated by the FlatBuffers compiler, do not modify

namespace slyther.flatbuffers
{

using System;
using FlatBuffers;

public enum ServerMessageType : byte
{
 NONE = 0,
 ServerHello = 1,
 ServerWorldState = 2,
 ServerGoodbye = 3,
 TickAck = 4,
};

public sealed class ServerMessage : Table {
  public static ServerMessage GetRootAsServerMessage(ByteBuffer _bb) { return GetRootAsServerMessage(_bb, new ServerMessage()); }
  public static ServerMessage GetRootAsServerMessage(ByteBuffer _bb, ServerMessage obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ServerMessage __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public ServerMessageType MsgType { get { int o = __offset(4); return o != 0 ? (ServerMessageType)bb.Get(o + bb_pos) : ServerMessageType.NONE; } }
  public TTable GetMsg<TTable>(TTable obj) where TTable : Table { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static Offset<ServerMessage> CreateServerMessage(FlatBufferBuilder builder,
      ServerMessageType msg_type = ServerMessageType.NONE,
      int msgOffset = 0) {
    builder.StartObject(2);
    ServerMessage.AddMsg(builder, msgOffset);
    ServerMessage.AddMsgType(builder, msg_type);
    return ServerMessage.EndServerMessage(builder);
  }

  public static void StartServerMessage(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddMsgType(FlatBufferBuilder builder, ServerMessageType msgType) { builder.AddByte(0, (byte)msgType, 0); }
  public static void AddMsg(FlatBufferBuilder builder, int msgOffset) { builder.AddOffset(1, msgOffset, 0); }
  public static Offset<ServerMessage> EndServerMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerMessage>(o);
  }
  public static void FinishServerMessageBuffer(FlatBufferBuilder builder, Offset<ServerMessage> offset) { builder.Finish(offset.Value); }
};

public sealed class ServerHello : Table {
  public static ServerHello GetRootAsServerHello(ByteBuffer _bb) { return GetRootAsServerHello(_bb, new ServerHello()); }
  public static ServerHello GetRootAsServerHello(ByteBuffer _bb, ServerHello obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ServerHello __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public byte ClientId { get { int o = __offset(4); return o != 0 ? bb.Get(o + bb_pos) : (byte)0; } }
  public ServerConfig Config { get { return GetConfig(new ServerConfig()); } }
  public ServerConfig GetConfig(ServerConfig obj) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }

  public static Offset<ServerHello> CreateServerHello(FlatBufferBuilder builder,
      byte clientId = 0,
      Offset<ServerConfig> configOffset = default(Offset<ServerConfig>)) {
    builder.StartObject(2);
    ServerHello.AddConfig(builder, configOffset);
    ServerHello.AddClientId(builder, clientId);
    return ServerHello.EndServerHello(builder);
  }

  public static void StartServerHello(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddClientId(FlatBufferBuilder builder, byte clientId) { builder.AddByte(0, clientId, 0); }
  public static void AddConfig(FlatBufferBuilder builder, Offset<ServerConfig> configOffset) { builder.AddOffset(1, configOffset.Value, 0); }
  public static Offset<ServerHello> EndServerHello(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerHello>(o);
  }
};

public sealed class ServerConfig : Table {
  public static ServerConfig GetRootAsServerConfig(ByteBuffer _bb) { return GetRootAsServerConfig(_bb, new ServerConfig()); }
  public static ServerConfig GetRootAsServerConfig(ByteBuffer _bb, ServerConfig obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ServerConfig __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public byte TickRate { get { int o = __offset(4); return o != 0 ? bb.Get(o + bb_pos) : (byte)0; } }

  public static Offset<ServerConfig> CreateServerConfig(FlatBufferBuilder builder,
      byte tickRate = 0) {
    builder.StartObject(1);
    ServerConfig.AddTickRate(builder, tickRate);
    return ServerConfig.EndServerConfig(builder);
  }

  public static void StartServerConfig(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTickRate(FlatBufferBuilder builder, byte tickRate) { builder.AddByte(0, tickRate, 0); }
  public static Offset<ServerConfig> EndServerConfig(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerConfig>(o);
  }
};

public sealed class ServerWorldState : Table {
  public static ServerWorldState GetRootAsServerWorldState(ByteBuffer _bb) { return GetRootAsServerWorldState(_bb, new ServerWorldState()); }
  public static ServerWorldState GetRootAsServerWorldState(ByteBuffer _bb, ServerWorldState obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ServerWorldState __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public uint Tick { get { int o = __offset(4); return o != 0 ? bb.GetUint(o + bb_pos) : (uint)0; } }
  public slyther.flatbuffers.NetworkObjectState GetObjectStates(int j) { return GetObjectStates(new slyther.flatbuffers.NetworkObjectState(), j); }
  public slyther.flatbuffers.NetworkObjectState GetObjectStates(slyther.flatbuffers.NetworkObjectState obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int ObjectStatesLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<ServerWorldState> CreateServerWorldState(FlatBufferBuilder builder,
      uint tick = 0,
      VectorOffset objectStatesOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ServerWorldState.AddObjectStates(builder, objectStatesOffset);
    ServerWorldState.AddTick(builder, tick);
    return ServerWorldState.EndServerWorldState(builder);
  }

  public static void StartServerWorldState(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTick(FlatBufferBuilder builder, uint tick) { builder.AddUint(0, tick, 0); }
  public static void AddObjectStates(FlatBufferBuilder builder, VectorOffset objectStatesOffset) { builder.AddOffset(1, objectStatesOffset.Value, 0); }
  public static VectorOffset CreateObjectStatesVector(FlatBufferBuilder builder, Offset<slyther.flatbuffers.NetworkObjectState>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartObjectStatesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ServerWorldState> EndServerWorldState(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerWorldState>(o);
  }
};

public sealed class ServerGoodbye : Table {
  public static ServerGoodbye GetRootAsServerGoodbye(ByteBuffer _bb) { return GetRootAsServerGoodbye(_bb, new ServerGoodbye()); }
  public static ServerGoodbye GetRootAsServerGoodbye(ByteBuffer _bb, ServerGoodbye obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ServerGoodbye __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }


  public static void StartServerGoodbye(FlatBufferBuilder builder) { builder.StartObject(0); }
  public static Offset<ServerGoodbye> EndServerGoodbye(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerGoodbye>(o);
  }
};


}
