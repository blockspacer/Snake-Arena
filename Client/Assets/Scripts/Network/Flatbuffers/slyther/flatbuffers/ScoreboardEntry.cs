// automatically generated by the FlatBuffers compiler, do not modify

namespace slyther.flatbuffers
{

using System;
using FlatBuffers;

public sealed class ScoreboardEntry : Table {
  public static ScoreboardEntry GetRootAsScoreboardEntry(ByteBuffer _bb) { return GetRootAsScoreboardEntry(_bb, new ScoreboardEntry()); }
  public static ScoreboardEntry GetRootAsScoreboardEntry(ByteBuffer _bb, ScoreboardEntry obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ScoreboardEntry __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string PlayerName { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetPlayerNameBytes() { return __vector_as_arraysegment(4); }
  public int Score { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<ScoreboardEntry> CreateScoreboardEntry(FlatBufferBuilder builder,
      StringOffset playerNameOffset = default(StringOffset),
      int score = 0) {
    builder.StartObject(2);
    ScoreboardEntry.AddScore(builder, score);
    ScoreboardEntry.AddPlayerName(builder, playerNameOffset);
    return ScoreboardEntry.EndScoreboardEntry(builder);
  }

  public static void StartScoreboardEntry(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPlayerName(FlatBufferBuilder builder, StringOffset playerNameOffset) { builder.AddOffset(0, playerNameOffset.Value, 0); }
  public static void AddScore(FlatBufferBuilder builder, int score) { builder.AddInt(1, score, 0); }
  public static Offset<ScoreboardEntry> EndScoreboardEntry(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ScoreboardEntry>(o);
  }
};


}
