// automatically generated by the FlatBuffers compiler, do not modify

namespace slyther.flatbuffers
{

using System;
using FlatBuffers;

public sealed class ClientHello : Table {
  public static ClientHello GetRootAsClientHello(ByteBuffer _bb) { return GetRootAsClientHello(_bb, new ClientHello()); }
  public static ClientHello GetRootAsClientHello(ByteBuffer _bb, ClientHello obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ClientHello __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string PlayerName { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetPlayerNameBytes() { return __vector_as_arraysegment(4); }

  public static Offset<ClientHello> CreateClientHello(FlatBufferBuilder builder,
      StringOffset playerNameOffset = default(StringOffset)) {
    builder.StartObject(1);
    ClientHello.AddPlayerName(builder, playerNameOffset);
    return ClientHello.EndClientHello(builder);
  }

  public static void StartClientHello(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPlayerName(FlatBufferBuilder builder, StringOffset playerNameOffset) { builder.AddOffset(0, playerNameOffset.Value, 0); }
  public static Offset<ClientHello> EndClientHello(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ClientHello>(o);
  }
};


}
